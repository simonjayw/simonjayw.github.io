(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{239:function(s,a,t){"use strict";t.r(a);var r=t(0),e=Object(r.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"docker-入门"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-入门"}},[s._v("#")]),s._v(" Docker 入门")]),s._v(" "),t("h2",{attrs:{id:"dockerfile"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile"}},[s._v("#")]),s._v(" Dockerfile")]),s._v(" "),t("div",{staticClass:"language-dockerfile extra-class"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# image 文件构建阶段执行，执行结果会被打包进入 image 文件")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" npm install\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 容器启动后执行")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" node index.js\n")])])]),t("h2",{attrs:{id:"数据挂载"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据挂载"}},[s._v("#")]),s._v(" 数据挂载")]),s._v(" "),t("p",[s._v("数据挂载有三种方式")]),s._v(" "),t("h3",{attrs:{id:"volume"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#volume"}},[s._v("#")]),s._v(" volume")]),s._v(" "),t("p",[s._v("是由docker默认及推荐的挂载方式，volume由docker直接管理，同一个volume可以共享给多个容器使用，volume和容器的生命周期完全独立，容器删除时volume仍然存在。")]),s._v(" "),t("p",[s._v("缺点：volume 在宿主机上比较难定位，在宿主机上直接操作 volume 比较困难。")]),s._v(" "),t("h3",{attrs:{id:"bind-mount"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bind-mount"}},[s._v("#")]),s._v(" bind mount")]),s._v(" "),t("p",[s._v("是直接将宿主机文件系统上的文件路径映射到容器中，两边双向同步。")]),s._v(" "),t("p",[s._v("优点：可以直接访问，也可以被别的程序使用")]),s._v(" "),t("p",[s._v("缺点：可以把任何文件路径使用bind mount的方式绑定到容器中，这样有可能一些安全问题。")]),s._v(" "),t("h3",{attrs:{id:"tmpfs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tmpfs"}},[s._v("#")]),s._v(" tmpfs")]),s._v(" "),t("p",[s._v("使用宿主机的内存作为存储，不会写到宿主机的文件系统中，和前两种区别较大。")]),s._v(" "),t("h2",{attrs:{id:"常用命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[s._v("#")]),s._v(" 常用命令")]),s._v(" "),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[s._v("service docker "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),s._v("                             "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" 开启docker服务\nsystemctl "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),s._v(" docker                           "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" 启动 docker 后台服务\nsystemctl daemon"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("reload                          "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" 重启docker守护进程\nsystemctl restart docker                         "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" 重启docker服务\ndocker pull jenkins"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("jenkins                      "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" docker拉取镜像\ndocker images                                    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" 查看镜像列表\ndocker "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("a                                     "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" 查看容器"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("不加"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("a查看正在运行的，加上"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("a查看所有容器\ndocker "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" 容器id                                  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" 删除容器\ndocker rmi 镜像id                                 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" 删除镜像\ndocker rmi REPOSITORY"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("TAR                        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" 删除镜像 例：docker rmi button"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("api"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("v2                        \ndocker stop 容器ID"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("容器别名                        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" 关闭一个已启动容器 \ndocker "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),s._v(" 容器ID"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("容器别名                       "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" 启动一个关闭的容器 \ndocker inspect 容器ID"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("容器别名                     "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" 查看一个容器的详情 \ndocker exec "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("it 容器ID"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("容器别名 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("bin"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("bash          "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" 进入容器内部\n")])])]),t("h3",{attrs:{id:"image"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#image"}},[s._v("#")]),s._v(" image")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("docker image ls")])]),s._v(" "),t("li",[t("p",[s._v("docker image rm [option] "),t("imageid")],1)])]),s._v(" "),t("h3",{attrs:{id:"container"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#container"}},[s._v("#")]),s._v(" container")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("docker container start")]),s._v(" "),t("p",[s._v("生成/启动容器，但不会重复生成容器；；； docker container run 会重复生成")])])]),s._v(" "),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[s._v("$ docker container "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[containerID]")]),s._v("\n")])])]),t("p",[s._v("更多参数:")]),s._v(" "),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("d ：在后台运行\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("it : 容器的 shell 映射到当前的 shell ， 然后在本机窗口输入命令，会传入容器\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("p 80:3000 ：将容器的 3000 端口映射到宿主机的 80 端口\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" : 容器停止运行后，自动删除容器文件\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("name xxx : 容器名字为 xxx\n")])])]),t("ul",[t("li",[t("p",[s._v("docker container stop")]),s._v(" "),t("p",[s._v("终止容器运行，相当于先发起 SIGTERM 信号，过段时间再发出 SIGKILL；；docker container kill 会直接发出 sigkill")])])]),s._v(" "),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[s._v("$ docker container stop "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[containerID]")]),s._v("\n")])])]),t("ul",[t("li",[t("p",[s._v("docker container exec")]),s._v(" "),t("p",[s._v("进入一个正在运行的 docker 容器")])])]),s._v(" "),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[s._v("$ docker container exec "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("it "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[containerID]")]),s._v(" bash\n")])])]),t("p",[s._v("通过 "),t("code",[s._v("ctrl + p +q")]),s._v(" 可以推出当前容器且不会关闭容器")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("docker container cp")]),s._v(" "),t("p",[s._v("从正在运行的 Docker 容器里，将文件拷贝到本机")])])]),s._v(" "),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[s._v("$ docker container "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[containID]")]),s._v(":"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("path"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("to"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("file"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n")])])]),t("h3",{attrs:{id:"其他"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[s._v("#")]),s._v(" 其他")]),s._v(" "),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[s._v("docker "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" mysql:"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("lib"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("mysql "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("own"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("mysqldata\n")])])]),t("ul",[t("li")]),s._v(" "),t("h2",{attrs:{id:"docker-build"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-build"}},[s._v("#")]),s._v(" docker build")]),s._v(" "),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[s._v("$ docker build "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[OPTIONS]")]),s._v(" PATH "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("|")]),s._v(" URL "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("\n")])])]),t("h2",{attrs:{id:"mysql"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mysql"}},[s._v("#")]),s._v(" MySql")]),s._v(" "),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[s._v("$ docker run "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("name mysql "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("e MYSQL_ROOT_PASSWORD=123456 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("d "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("p 3306:3306 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("v "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("usr"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("local"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("mysql"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("conf:"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("etc"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("mysql"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("conf"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("v "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("usr"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("local"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("mysql"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("data")]),s._v(":"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("lib"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("mysql "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("restart=always mysql\n")])])]),t("p",[t("code",[s._v("-e MYSQL_ROOT_PASSWORD=123456")]),s._v(" 设置 root 用户密码")]),s._v(" "),t("p",[t("code",[s._v("-d")]),s._v(" 后台运行")]),s._v(" "),t("p",[t("code",[s._v("-p 3306:3306")]),s._v(" 指定端口")]),s._v(" "),t("p",[t("code",[s._v("--restart=always")]),s._v(" docker 重启后，容器自动启动")]),s._v(" "),t("p",[t("code",[s._v("--privileged=true")]),s._v(" 容器内的root拥有真正root权限，否则容器内root只是外部普通用户权限")]),s._v(" "),t("p",[t("code",[s._v("-v")]),s._v(" 挂在目录")]),s._v(" "),t("p",[s._v("mysql 的默认配置文件"),t("code",[s._v("/etc/mysql/my.cnf")]),s._v(" "),t("code",[s._v("/etc/mysql/conf.d")]),s._v("  后者是个文件夹，权限大于前者。文件夹中可以命名任意 "),t("code",[s._v("xxx.cnf")]),s._v(" 来覆盖 "),t("code",[s._v("my.cnf")])]),s._v(" "),t("p",[s._v("Mysql 的数据默认存放在 "),t("code",[s._v("/var/lib/mysql")]),s._v(" 中")]),s._v(" "),t("p",[s._v("进入")]),s._v(" "),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 进入容器")]),s._v("\n$ docker exec "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("it mysql bash\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 登陆输入上面的密码")]),s._v("\n$ mysql "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("u root "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("p\n")])])]),t("p",[s._v("远程访问权限")]),s._v(" "),t("p",[s._v("这里需要有个用户的概念。root 用户没有开放远程访问权限。而是另外创建了一个 simon 用户，授予远程访问。")]),s._v(" "),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 添加进入到mysql容器内部才能执行命令设置远程登陆账号密码")]),s._v("\n$ CREATE USER "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'simon'")]),s._v("@"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%'")]),s._v(" IDENTIFIED WITH mysql_native_password BY "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'123456'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开启远程访问权限")]),s._v("\n$ GRANT ALL PRIVILEGES ON "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" TO "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'simon'")]),s._v("@"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 刷新权限")]),s._v("\n$ flush privileges"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    \n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);