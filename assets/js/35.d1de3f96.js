(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{433:function(a,s,n){"use strict";n.r(s);var t=n(27),e=Object(t.a)({},(function(){var a=this,s=a.$createElement,n=a._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("h1",{attrs:{id:"yarn"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#yarn"}},[a._v("#")]),a._v(" yarn")]),a._v(" "),n("h2",{attrs:{id:"安装过程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装过程"}},[a._v("#")]),a._v(" 安装过程")]),a._v(" "),n("p",[a._v("检测（checking）→ 解析包（Resolving Packages） → 获取包（Fetching Packages）→ 链接包（Linking Packages）→ 构建包（Building Packages）")]),a._v(" "),n("h3",{attrs:{id:"获取包"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#获取包"}},[a._v("#")]),a._v(" 获取包")]),a._v(" "),n("p",[a._v("不过 Yarn 默认 prefer-online 模式，即优先使用网络数据。如果网络数据请求失败，再去请求缓存数据。")]),a._v(" "),n("p",[a._v("Yarn 会根据 cacheFolder+slug+node_modules+pkg.name 生成一个 path，判断系统中是否存在该 path，如果存在证明已经有缓存，不用重新下载。这个 path 也就是依赖包缓存的具体路径。")]),a._v(" "),n("h2",{attrs:{id:"解决了哪些-npm-问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#解决了哪些-npm-问题"}},[a._v("#")]),a._v(" 解决了哪些 npm 问题")]),a._v(" "),n("ul",[n("li",[a._v("yarn 缓存了每次你下载的模块")]),a._v(" "),n("li",[a._v("yarn 可以通过并行的网络请求最大限度利用网络资源")]),a._v(" "),n("li",[a._v("yarn 在开始安装一个包之前会先用 checksums 来验证，你不用担心本地的缓存的包被破坏了导致安装失败")]),a._v(" "),n("li",[a._v("...")])]),a._v(" "),n("h2",{attrs:{id:"常用命令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[a._v("#")]),a._v(" 常用命令")]),a._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" init "),n("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# npm init")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# npm install")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" react "),n("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# npm i -S react")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" -D webpack "),n("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# npm i -D webpack")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" global "),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" babel "),n("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# npm i -g babel")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" remove vue "),n("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 删除依赖包 npm uninstall vue")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" upgrade "),n("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 升级 package.json 指定的所有依赖包(在package.json指定的版本范围内)")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" upgrade --latest "),n("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 升级package.json指定的所有依赖包,但忽略package.json指定的版本范围,同时package.json中指定的版本将被重写")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" outdated "),n("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 列出包的所有依赖项的版本信息。此信息包括当前安装的版本、基于语义版本所需的版本和最新的可用版本")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" run "),n("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 列出包里所有可运行的脚本")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" run dev "),n("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 运行package.json中scripts定义的脚本命令,等同于 npm runx")]),a._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" global list --depth"),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看全局安装的包")]),a._v("\n")])])]),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" config list "),n("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看config")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" config list "),n("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看当前目录相关config")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" config get registry "),n("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看当前下载源,初始为https://registry.yarnpkg.com")]),a._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" config "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("set")]),a._v(" registry https://registry.npm.taobao.org -g "),n("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 更改为淘宝")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" config "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("set")]),a._v(" sass_binary_site http://cdn.npm.taobao.org/dist/node-sass -g\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);