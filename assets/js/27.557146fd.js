(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{321:function(t,a,v){"use strict";v.r(a);var _=v(17),s=Object(_.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"数据结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据结构"}},[t._v("#")]),t._v(" 数据结构")]),t._v(" "),v("h2",{attrs:{id:"概念"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),v("p",[t._v("线性表：就是数据排成像一条线一样的结构。数据最多只有前和后两个方向（数组、链表、队列、栈）")]),t._v(" "),v("p",[v("img",{attrs:{src:"http://file.wangsijie.top/blog/20200321153234.png",alt:""}})]),t._v(" "),v("p",[t._v("非线形表：数据之前并不是简单的前后关系。（二叉树、堆、图）")]),t._v(" "),v("p",[v("img",{attrs:{src:"http://file.wangsijie.top/blog/20200321153255.png",alt:""}})]),t._v(" "),v("p",[t._v("连续的内存空间和相同类型的数据，特性是“随机访问”。但是删除，插入非常低效，为了保证连续性，就需要做大量数据搬移工作。")]),t._v(" "),v("h2",{attrs:{id:"数组-array"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数组-array"}},[t._v("#")]),t._v(" 数组 Array")]),t._v(" "),v("blockquote",[v("p",[t._v("数组是一种线性表数据结构。它用一组连续的内存空间，来存储一组具有相同类型的数据。")])]),t._v(" "),v("h3",{attrs:{id:"低效的插入和删除"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#低效的插入和删除"}},[t._v("#")]),t._v(" 低效的插入和删除")]),t._v(" "),v("p",[t._v("插入 或 删除：")]),t._v(" "),v("p",[t._v("末尾插入，时间复杂度 O(1) ；开头插入，时间复杂度 O(n)；平均情况时间复杂度 (1+2+...+n)/n = O(n)")]),t._v(" "),v("p",[v("strong",[t._v("插入优化")]),t._v("：")]),t._v(" "),v("p",[t._v("如果数据是无序的，不用管排序，那么，可以把插入位置 x 替换为新的值，再把旧值放入最后。")]),t._v(" "),v("p",[v("img",{attrs:{src:"http://file.wangsijie.top/blog/20200321154603.png",alt:""}})]),t._v(" "),v("p",[t._v("这样时间复杂度就会降到 O(1)")]),t._v(" "),v("p",[v("strong",[t._v("删除优化")]),t._v("：")]),t._v(" "),v("p",[t._v("在不一定追求连续的时候，多次删除时，让他们集中删除。每次删除标记数据被删除，但不真正搬移数据，当数组没有更多空间，再一次性删除。")]),t._v(" "),v("p",[t._v("比如 JVM 标记清除垃圾回收算法的核心思想。")]),t._v(" "),v("h3",{attrs:{id:"区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#区别"}},[t._v("#")]),t._v(" 区别")]),t._v(" "),v("p",[t._v("链表：适合插入、删除，时间复杂度是 O(1)")]),t._v(" "),v("p",[t._v("数组：支持随机访问，根据下表随机访问的时间复杂度为 O(1)")]),t._v(" "),v("h2",{attrs:{id:"链表-linked-list"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#链表-linked-list"}},[t._v("#")]),t._v(" 链表 Linked List")]),t._v(" "),v("p",[t._v("时间复杂度")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("插入删除: "),v("code",[t._v("O(1)")])])]),t._v(" "),v("li",[v("p",[t._v("随机访问: "),v("code",[t._v("O(n)")])])])]),t._v(" "),v("p",[t._v("空间复杂度")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("O(n)")])])])])}),[],!1,null,null,null);a.default=s.exports}}]);